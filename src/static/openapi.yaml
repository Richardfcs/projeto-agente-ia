openapi: 3.0.3
info:
  title: Agente de IA - API de Geração de Documentos
  description: |-
    API para interagir com uma equipe de agentes de IA (CrewAI) para gerar, gerenciar e conversar sobre documentos.
    A autenticação é feita via Bearer Token (JWT) na maioria dos endpoints.
  version: 1.0.0

servers:
  - url: https://agente-ia-squad42.onrender.com
    description: Servidor de Produção no Render
  - url: http://127.0.0.1:5000
    description: Servidor de desenvolvimento local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

tags:
  - name: Authentication
    description: Endpoints para registro e login de usuários.
  - name: Conversations & Chat
    description: Endpoints para interagir com a IA e gerenciar o histórico de conversas.
  - name: Documents & Files
    description: Endpoints para upload, download e gerenciamento de arquivos.
  - name: Templates
    description: Endpoints para gerenciamento de templates.

paths:
  # ===================================================================
  # Authentication (Sem alterações nesta seção)
  # ===================================================================
  /api/auth/register:
    post:
      tags: [Authentication]
      summary: Registrar um novo usuário
      description: Cria uma nova conta de usuário com nome completo, email e senha.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [full_name, email, password]
              properties:
                full_name:
                  type: string
                  example: "João da Silva"
                email:
                  type: string
                  format: email
                  example: "joao.silva@email.com"
                password:
                  type: string
                  format: password
                  example: "senhaSegura123"
      responses:
        '201':
          description: Usuário registrado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: "Usuário registrado com sucesso!"
        '400':
          description: Dados de entrada inválidos ou faltando.
        '409':
          description: O email fornecido já está em uso.

  /api/auth/login:
    post:
      tags: [Authentication]
      summary: Fazer login e obter um token JWT
      description: Autentica um usuário com email e senha e retorna um token de acesso JWT.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: "joao.silva@email.com"
                password:
                  type: string
                  format: password
                  example: "senhaSegura123"
      responses:
        '200':
          description: Login bem-sucedido. Retorna o token de acesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Credenciais inválidas.
  
  /api/auth/profile:
    get:
      tags: [Authentication]
      summary: Obter informações do perfil do usuário logado
      description: Retorna os dados do usuário associado ao token JWT.
      security:
        - bearerAuth: [] 
      responses:
        '200':
          description: Perfil do usuário retornado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "68d3171f54c1b1ebbe19d0e9"
                  full_name:
                    type: string
                    example: "João da Silva"
                  email:
                    type: string
                    format: email
                    example: "joao.silva@email.com"
        '401':
          description: Não autorizado.
        '404':
          description: Usuário não encontrado.

  # ===================================================================
  # Conversations & Chat (Sem alterações nesta seção)
  # ===================================================================
  /api/chat/conversations:
    post:
      tags: [Conversations & Chat]
      summary: Enviar uma mensagem para a IA
      requestBody:
        required: true
        content:
          application/json:
            schema: {type: object, properties: {prompt: {type: string}, conversation_id: {type: string}, input_document_id: {type: string}}}
      responses:
        '201':
          description: Solicitação processada com sucesso.
        '400':
          description: Prompt ausente.
        '401':
          description: Não autorizado.
    get:
      tags: [Conversations & Chat]
      summary: Listar todas as conversas do usuário
      responses:
        '200':
          description: Uma lista de conversas.
        '401':
          description: Não autorizado.
  
  /api/chat/conversations/{conversation_id}:
    get:
      tags: [Conversations & Chat]
      summary: Obter o histórico de uma conversa
      parameters: [{name: conversation_id, in: path, required: true, schema: {type: string}}]
      responses:
        '200':
          description: Uma lista de mensagens da conversa.
        '401':
          description: Não autorizado.
        '404':
          description: Conversa não encontrada.
    delete:
      tags: [Conversations & Chat]
      summary: Excluir uma conversa inteira
      parameters: [{name: conversation_id, in: path, required: true, schema: {type: string}}]
      responses:
        '200':
          description: Conversa excluída com sucesso.
        '401':
          description: Não autorizado.
        '404':
          description: Conversa não encontrada.
      
  /api/chat/conversations/{conversation_id}/rename:
    put:
      tags: [Conversations & Chat]
      summary: Renomear o título de uma conversa
      parameters: [{name: conversation_id, in: path, required: true, schema: {type: string}}]
      requestBody:
        required: true
        content:
          application/json:
            schema: {type: object, properties: {new_title: {type: string}}}
      responses:
        '200':
          description: Conversa renomeada com sucesso.
        '401':
          description: Não autorizado.
        '404':
          description: Conversa não encontrada.

  /api/chat/messages/{message_id}/edit:
    put:
      tags: [Conversations & Chat]
      summary: Editar uma mensagem de usuário
      parameters: [{name: message_id, in: path, required: true, schema: {type: string}}]
      requestBody:
        required: true
        content:
          application/json:
            schema: {type: object, properties: {new_content: {type: string}}}
      responses:
        '200':
          description: Mensagem editada e conversa reprocessada.
        '401':
          description: Não autorizado.
        '404':
          description: Mensagem não encontrada.
      
  /api/chat/messages/{message_id}:
    delete:
      tags: [Conversations & Chat]
      summary: Excluir uma única mensagem
      parameters: [{name: message_id, in: path, required: true, schema: {type: string}}]
      responses:
        '200':
          description: Mensagem excluída com sucesso.
        '401':
          description: Não autorizado.
        '404':
          description: Mensagem não encontrada.

  /api/chat/messages/{message_id}/regenerate:
    post:
      tags: [Conversations & Chat]
      summary: Regenerar a resposta da IA
      parameters: [{name: message_id, in: path, required: true, schema: {type: string}}]
      responses:
        '200':
          description: Regeneração da resposta iniciada.
        '401':
          description: Não autorizado.
        '404':
          description: Mensagem não encontrada.

  # ===================================================================
  # Documents & Files (Alterações importantes nesta seção)
  # ===================================================================
  /api/documents/upload:
    post:
      tags: [Documents & Files]
      summary: Fazer upload de um documento
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: {type: object, properties: {file: {type: string, format: binary}}}
      responses:
        '201':
          description: Arquivo enviado com sucesso.
        '401':
          description: Não autorizado.
      
  /api/documents:
    get:
      tags: [Documents & Files]
      summary: Listar documentos do usuário (com paginação)
      ### MUDANÇA 1: Adicionados parâmetros de paginação ###
      parameters:
        - name: page
          in: query
          required: false
          description: "O número da página a ser retornada."
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: "O número de itens por página."
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Uma lista paginada de metadados dos documentos.
          ### MUDANÇA 2: Resposta agora é um objeto com 'data' e 'pagination' ###
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id: { type: string }
                        filename: { type: string }
                        owner_id: { type: string }
                        created_at: { type: string, format: date-time }
                  pagination:
                    type: object
                    properties:
                      total_items: { type: integer }
                      total_pages: { type: integer }
                      current_page: { type: integer }
                      items_per_page: { type: integer }
        '401':
          description: Não autorizado.
  
  /api/documents/search:
    get:
      tags: [Documents & Files]
      summary: Buscar documentos por nome (otimizado e com paginação)
      ### MUDANÇA 3: Adicionados parâmetros de paginação ###
      parameters:
        - name: q
          in: query
          required: true
          description: "O termo de busca para o nome do arquivo."
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: "O número da página a ser retornada."
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: "O número de itens por página."
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: O resultado paginado da busca de documentos.
          ### MUDANÇA 4: Resposta agora é um objeto com 'data' e 'pagination' ###
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id: { type: string }
                        filename: { type: string }
                        owner_id: { type: string }
                        created_at: { type: string, format: date-time }
                  pagination:
                    type: object
                    properties:
                      total_items: { type: integer }
                      total_pages: { type: integer }
                      current_page: { type: integer }
                      items_per_page: { type: integer }
        '401':
          description: Não autorizado.

  ### MUDANÇA 5: Adicionada a nova rota de download recomendada ###
  /api/documents/{document_id}/download:
    get:
      tags: [Documents & Files]
      summary: Fazer download de um documento (Recomendado)
      description: Baixa um documento usando o ID do metadado (`_id`), que é retornado pela API de chat. Este é o método preferencial para o frontend.
      parameters:
        - name: document_id
          in: path
          required: true
          description: "O ID do metadado do documento a ser baixado."
          schema:
            type: string
      responses:
        '200':
          description: O arquivo do documento para download.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: O ID do documento fornecido é inválido.
        '401':
          description: Não autorizado.
        '404':
          description: Documento não encontrado ou acesso negado.

  /api/files/{gridfs_file_id}:
    get:
      tags: [Documents & Files]
      ### MUDANÇA 6: Atualizado sumário e descrição para clarificar o uso ###
      summary: Fazer download de um arquivo (por GridFS ID)
      description: "Este endpoint baixa um arquivo usando o ID interno do GridFS. **Recomendação:** Use o novo endpoint `/documents/{document_id}/download` para uma integração mais simples com o frontend."
      parameters: [{name: gridfs_file_id, in: path, required: true, schema: {type: string}}]
      responses:
        '200':
          description: Download do arquivo.
        '401':
          description: Não autorizado.
        '404':
          description: Arquivo não encontrado.
      
  /api/documents/{document_id}/rename:
    put:
      tags: [Documents & Files]
      summary: Renomear um documento
      parameters: [{name: document_id, in: path, required: true, schema: {type: string}}]
      requestBody:
        required: true
        content:
          application/json:
            schema: {type: object, properties: {new_filename: {type: string}}}
      responses:
        '200':
          description: Documento renomeado com sucesso.
        '401':
          description: Não autorizado.
        '404':
          description: Documento não encontrado.
          
  /api/documents/{document_id}:
    delete:
      tags: [Documents & Files]
      summary: Excluir um documento
      parameters: [{name: document_id, in: path, required: true, schema: {type: string}}]
      responses:
        '200':
          description: Documento excluído com sucesso.
        '401':
          description: Não autorizado.
        '404':
          description: Documento não encontrado.
          
  # ===================================================================
  # Templates
  # ===================================================================
  /api/templates/upload:
    post:
      tags: [Templates]
      summary: Fazer upload de um template
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: {type: object, properties: {file: {type: string, format: binary}}}
      responses:
        '201':
          description: Template enviado com sucesso.
        '401':
          description: Não autorizado.

  /api/templates:
    get:
      tags: [Templates]
      summary: Listar todos os templates disponíveis (com paginação)
      ### MUDANÇA 7: Adicionados parâmetros de paginação ###
      parameters:
        - name: page
          in: query
          required: false
          description: "O número da página a ser retornada."
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: "O número de itens por página."
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Uma lista paginada de metadados de templates.
          ### MUDANÇA 8: Resposta agora é um objeto com 'data' e 'pagination' ###
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id: { type: string }
                        filename: { type: string }
                        uploaded_by: { type: string }
                        created_at: { type: string, format: date-time }
                  pagination:
                    type: object
                    properties:
                      total_items: { type: integer }
                      total_pages: { type: integer }
                      current_page: { type: integer }
                      items_per_page: { type: integer }
        '401':
          description: Não autorizado.